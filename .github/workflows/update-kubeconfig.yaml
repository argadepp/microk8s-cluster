name: Update the configs
permissions:
  id-token: write
  contents: read
on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: Select the action
        options:
          - apply
          - destroy
          - refresh    
      region:
        type: choice
        description: Select the region
        options:
          - ap-south-1
          - us-east-1
          - ap-east-1
      product:
        description: Product
        default: DevOpsTech
      environment:
        type: choice
        description: environment
        default: dev 
        options:
          - dev
          - qa
          - stage
          - prod
                      
jobs:
  tf_fmt:
    name: Update the configs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
    - name: Get the keyfile
      run: |
        mkdir -p /home/runner/.ssh
        echo "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/id_rsa
        chmod 600 /home/runner/.ssh/id_rsa
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::637423592422:role/git-action-deploy-role
        aws-region: ap-south-1       

    - name: Find the ip
      id: get-ip
      run: |
         IP=$(aws ec2 describe-instances --region ap-south-1 --filters "Name=tag:Name,Values=${{ inputs.product }}-${{ inputs.environment }}-cluster" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
         echo "IP is $IP"
         echo "::set-output name=ec2_ip::$IP"
    - name: Run script on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/id_rsa ubuntu@${{ steps.get-ip.outputs.ec2_ip }} 'sudo bash -s' < ./scripts/updatetheip.sh ${{ steps.get-ip.outputs.ec2_ip }}      

    - name: Generate MicroK8s Join Command
      id: generate-join
      run: |
        JOIN_COMMAND=$(ssh -o StrictHostKeyChecking=no -i /path/to/your/keyfile ubuntu@${{ steps.get-ip.outputs.ec2_ip }}  "sudo microk8s add-node --token-expiration 604800")
        echo "JOIN_COMMAND=$JOIN_COMMAND" >> $GITHUB_ENV
    - name: Save Join Command to File
      run: echo "${{ env.JOIN_COMMAND }}" > join_command.txt  

    - name: Upload Join Command
      uses: actions/upload-artifact@v3
      with:
        name: join-command
        path: join_command.txt      

